@import "@/styles/variables.scss";
@import "@/styles/mixins.scss";

.heroSection {
  position: relative;
  padding: 5rem 0 4rem;
  overflow: hidden;
  
  @media (max-width: $breakpoint-md) {
    padding: 4rem 0 3rem;
  }
  
  @media (max-width: $breakpoint-sm) {
    padding: 3rem 0 2rem;
  }
}

.container {
  max-width: 1300px;
  margin: 0 auto;
  padding: 0 2rem;
  position: relative;
  z-index: 2;
  
  @media (max-width: $breakpoint-md) {
    padding: 0 1.5rem;
  }
}

.sectionHeader {
  text-align: center;
  max-width: 800px;
  margin: 0 auto 4rem;
  
  @media (max-width: $breakpoint-md) {
    margin-bottom: 3rem;
  }
}

.headerBadge {
  display: inline-block;
  padding: 0.5rem 1.25rem;
  background: linear-gradient(to right, rgba($primary, 0.08), rgba($accent, 0.12));
  border-radius: 100px;
  color: $primary;
  font-size: 0.875rem;
  font-weight: 600;
  letter-spacing: 0.06em;
  text-transform: uppercase;
  margin-bottom: 1.25rem;
  
  [data-theme="dark"] & {
    background: linear-gradient(to right, rgba($primary, 0.15), rgba($accent, 0.2));
    color: lighten($primary, 15%);
  }
}

.sectionTitle {
  font-size: 2.75rem;
  font-weight: 800;
  line-height: 1.2;
  margin-bottom: 1.5rem;
  color: $text-primary;
  
  [data-theme="dark"] & {
    color: $text-primary-dark;
  }
  
  @media (max-width: $breakpoint-md) {
    font-size: 2.25rem;
  }
  
  @media (max-width: $breakpoint-sm) {
    font-size: 1.75rem;
  }
}

.highlight {
  background: linear-gradient(90deg, $primary 0%, $accent 100%);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  position: relative;
  display: inline-block;
  
  &::after {
    content: '';
    position: absolute;
    bottom: 5px;
    left: 0;
    width: 100%;
    height: 6px;
    background: linear-gradient(90deg, rgba($primary, 0.2) 0%, rgba($accent, 0.2) 100%);
    border-radius: 3px;
    z-index: -1;
  }
}

.sectionDescription {
  font-size: 1.1rem;
  line-height: 1.7;
  color: $text-secondary;
  
  [data-theme="dark"] & {
    color: $text-secondary-dark;
  }
  
  @media (max-width: $breakpoint-sm) {
    font-size: 1rem;
  }
}

.servicesGrid {
  display: grid;
  grid-template-columns: 0.8fr 1.2fr;
  gap: 2.5rem;
  
  @media (max-width: $breakpoint-lg) {
    grid-template-columns: 1fr;
    gap: 2rem;
  }
}

.servicesTabs {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  position: relative;
  
  @media (max-width: $breakpoint-lg) {
    flex-direction: row;
    overflow-x: auto;
    padding-bottom: 1rem;
    
    &::-webkit-scrollbar {
      height: 4px;
      border-radius: 2px;
    }
    
    &::-webkit-scrollbar-track {
      background: rgba($text-secondary, 0.1);
    }
    
    &::-webkit-scrollbar-thumb {
      background: $primary;
      border-radius: 2px;
    }
  }
}

.serviceTab {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1.25rem 1.5rem;
  background: white;
  border-radius: 12px;
  border: 1px solid rgba(0, 0, 0, 0.04);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.04);
  text-align: left;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 0;
    background: var(--service-color, $primary);
    transition: height 0.3s ease;
    border-radius: 0 2px 2px 0;
  }
  
  &:hover {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.06);
    
    &::before {
      height: 40%;
    }
  }
  
  &.active {
    background: linear-gradient(to right, rgba(var(--service-color, $primary), 0.03), rgba(var(--service-color, $primary), 0.01));
    border-color: rgba(var(--service-color, $primary), 0.1);
    
    &::before {
      height: 100%;
    }
    
    .serviceIcon {
      background: linear-gradient(135deg, var(--service-color), color-mix(in srgb, var(--service-color) 70%, white)) !important;
      color: white;
      box-shadow: 0 8px 16px rgba(var(--service-color, $primary), 0.25);
    }
  }
  
  span {
    font-size: 1.1rem;
    font-weight: 600;
    color: $text-primary;
    transition: color 0.3s ease;
  }
  
  [data-theme="dark"] & {
    background: $bg-secondary-dark;
    border-color: rgba(255, 255, 255, 0.05);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    
    &:hover {
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    }
    
    span {
      color: $text-primary-dark;
    }
  }
  
  @media (max-width: $breakpoint-lg) {
    min-width: 220px;
    flex-shrink: 0;
    padding: 1rem 1.25rem;
    
    span {
      font-size: 1rem;
    }
  }
}

.serviceIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 48px;
  height: 48px;
  border-radius: 12px;
  color: var(--service-color, $primary);
  flex-shrink: 0;
  transition: all 0.3s ease;
  
  @media (max-width: $breakpoint-lg) {
    width: 42px;
    height: 42px;
    
    svg {
      width: 20px;
      height: 20px;
    }
  }
  
  [data-theme="dark"] & {
    color: lighten($primary, 15%);
  }
}

.serviceDetails {
  position: relative;
  min-height: 400px;
  
  @media (max-width: $breakpoint-md) {
    min-height: auto;
  }
}

.serviceDetail {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 0;
  visibility: hidden;
  opacity: 0;
  overflow: hidden;
  background: white;
  border-radius: 16px;
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.06);
  display: flex;
  // grid-template-columns: 1fr 1fr;
  
  &.active {
    position: relative;
    height: auto;
    visibility: visible;
    opacity: 1;
  }
  
  [data-theme="dark"] & {
    background: $bg-secondary-dark;
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
  }
  
  @media (max-width: $breakpoint-md) {
    grid-template-columns: 1fr;
  }
}

.serviceContent {
  padding: 2.5rem;
  
  h2 {
    font-size: 1.75rem;
    font-weight: 700;
    color: $text-primary;
    margin-bottom: 1rem;
    
    [data-theme="dark"] & {
      color: $text-primary-dark;
    }
    
    @media (max-width: $breakpoint-sm) {
      font-size: 1.5rem;
    }
  }
  
  p {
    font-size: 1rem;
    line-height: 1.7;
    color: $text-secondary;
    margin-bottom: 1.5rem;
    
    [data-theme="dark"] & {
      color: $text-secondary-dark;
    }
  }
  
  @media (max-width: $breakpoint-sm) {
    padding: 1.75rem 1.5rem;
  }
}

.serviceFeatures {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1rem;
  margin-bottom: 1.5rem;
  
  @media (max-width: 500px) {
    grid-template-columns: 1fr;
  }
}

.featureItem {
  display: flex;
  align-items: flex-start;
  gap: 0.6rem;
  
  .featureIcon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    background: linear-gradient(135deg, $primary, $accent);
    border-radius: 50%;
    color: white;
    flex-shrink: 0;
    margin-top: 0.2rem;
  }
  
  span {
    font-size: 0.95rem;
    color: $text-secondary;
    line-height: 1.5;
    
    [data-theme="dark"] & {
      color: $text-secondary-dark;
    }
  }
}

.techTags {
  margin-bottom: 1.5rem;
  
  h4 {
    font-size: 1rem;
    font-weight: 600;
    color: $text-primary;
    margin-bottom: 0.75rem;
    
    [data-theme="dark"] & {
      color: $text-primary-dark;
    }
  }
}

.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.tag {
  display: inline-block;
  padding: 0.5rem 0.75rem;
  background: rgba($text-secondary, 0.08);
  border-radius: 8px;
  font-size: 0.85rem;
  color: $text-secondary;
  font-weight: 500;
  
  [data-theme="dark"] & {
    background: rgba(255, 255, 255, 0.08);
    color: $text-secondary-dark;
  }
}

.learnMoreButton {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  background: linear-gradient(135deg, $primary, $accent);
  border-radius: 8px;
  color: white;
  font-weight: 600;
  font-size: 0.95rem;
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba($primary, 0.25);
    
    svg {
      transform: translateX(3px);
    }
  }
  
  svg {
    transition: transform 0.3s ease;
  }
}

.serviceImageWrapper {
  overflow: hidden;
  
  @media (max-width: $breakpoint-md) {
    height: 250px;
  }
}

.serviceImage {
  position: relative;
  height: 100%;
  overflow: hidden;
  
  img {
    transition: transform 0.7s ease;
  }
  
  &:hover img {
    transform: scale(1.05);
  }
}

.imageOverlay {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 40%;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.5), transparent);
  z-index: 1;
}

.decorElements {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none;
}

.decorCircle1 {
  position: absolute;
  top: -150px;
  right: -150px;
  width: 450px;
  height: 450px;
  border-radius: 50%;
  background: radial-gradient(circle, rgba($primary, 0.05) 0%, rgba($primary, 0) 70%);
  
  [data-theme="dark"] & {
    background: radial-gradient(circle, rgba($primary, 0.07) 0%, rgba($primary, 0) 70%);
  }
}

.decorCircle2 {
  position: absolute;
  bottom: 10%;
  left: -100px;
  width: 300px;
  height: 300px;
  border-radius: 50%;
  background: radial-gradient(circle, rgba($accent, 0.04) 0%, rgba($accent, 0) 70%);
  
  [data-theme="dark"] & {
    background: radial-gradient(circle, rgba($accent, 0.06) 0%, rgba($accent, 0) 70%);
  }
}

.decorPattern {
  position: absolute;
  top: 30%;
  left: 0;
  width: 200px;
  height: 200px;
  background-image: 
    linear-gradient(rgba($primary, 0.03) 1px, transparent 1px),
    linear-gradient(90deg, rgba($primary, 0.03) 1px, transparent 1px);
  background-size: 20px 20px;
  transform: rotate(15deg);
  opacity: 0.8;
  
  [data-theme="dark"] & {
    background-image: 
      linear-gradient(rgba($primary, 0.05) 1px, transparent 1px),
      linear-gradient(90deg, rgba($primary, 0.05) 1px, transparent 1px);
  }
}