@import "@/styles/variables.scss";
@import "@/styles/mixins.scss";

/* ============ Base Section (unchanged parts omitted where possible) ============ */
.projectGridSection {
  position: relative;
  padding: 0;
}
.container {
  max-width: 1300px;
  margin: 0 auto;
  padding: 0 2rem;
  position: relative;
  @media (max-width: $breakpoint-md) { padding: 0 1.5rem; }
}

/* Header (kept) */
// Section Header
.sectionHeader {
  text-align: center;
  max-width: 800px;
  margin: 0 auto 4rem;
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.7s ease, transform 0.7s ease;
  
  &.loaded {
    opacity: 1;
    transform: translateY(0);
  }
  
  @media (max-width: $breakpoint-md) {
    margin-bottom: 3rem;
  }
}

.sectionBadge {
  display: inline-block;
  font-size: 1rem;
  font-weight: 600;
  color: $primary;
  margin: 0 0 1rem;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  
  [data-theme="dark"] & {
    color: $primary;
  }
}

.sectionTitle {
  font-size: 2.5rem;
  font-weight: 800;
  line-height: 1.2;
  margin-bottom: 1.25rem;
  color: $text-primary;
  
  [data-theme="dark"] & {
    color: $text-primary-dark;
  }
  
  @media (max-width: $breakpoint-md) {
    font-size: 2rem;
  }
}

.highlight {
  background: linear-gradient(90deg, $primary 0%, $accent 100%);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  position: relative;
  display: inline-block;
  
  &::after {
    content: '';
    position: absolute;
    bottom: 5px;
    left: 0;
    width: 100%;
    height: 6px;
    background: linear-gradient(90deg, rgba($primary, 0.2) 0%, rgba($accent, 0.2) 100%);
    border-radius: 3px;
    z-index: -1;
  }
}

.sectionDescription {
  font-size: 1.1rem;
  line-height: 1.7;
  color: $text-secondary;
  
  [data-theme="dark"] & {
    color: $text-secondary-dark;
  }
}

/* ============ Improved Filter Bar ============ */
.filtersShell {
  margin-bottom: 2.25rem;
  display: flex;
  flex-direction: column;
  gap: .9rem;
}

.filterRow {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: .75rem;
  position: relative;
}

.filterControl {
  position: relative;
  display: inline-flex;
  align-items: stretch;
}

.filterTrigger {
  --pad-x: 0.95rem;
  display: inline-flex;
  align-items: center;
  gap: .55rem;
  padding: .65rem var(--pad-x);
  font-size: .78rem;
  font-weight: 600;
  letter-spacing: .5px;
  text-transform: uppercase;
  border: 1px solid rgba($text-secondary, .15);
  background: rgba($text-secondary, .05);
  color: $text-secondary;
  border-radius: 999px;
  cursor: pointer;
  position: relative;
  transition: background .3s, border-color .3s, color .3s, box-shadow .3s;

  .triggerIcon { display: flex; align-items: center; color: $primary; }
  .triggerLabel { opacity: .85; }
  .triggerValue {
    background: linear-gradient(90deg, $primary, $accent);
    -webkit-background-clip: text; color: transparent;
    font-weight: 700;
  }
  .chevron { transition: transform .35s ease; }

  &:hover {
    background: rgba($primary, .08);
    border-color: rgba($primary, .35);
    color: $text-primary;
  }

  &.filled {
    background: linear-gradient(135deg, rgba($primary,.15), rgba($accent,.15));
    border-color: rgba($primary,.45);
    color: $text-primary;
    box-shadow: 0 4px 14px -4px rgba($primary,.25);
  }

  [data-theme="dark"] & {
    background: rgba($primary, .07);
    border-color: rgba($primary, .35);
    color: $text-secondary-dark;

    &:hover {
      background: linear-gradient(135deg, rgba($primary,.18), rgba($accent,.18));
      color: $text-primary-dark;
    }
    &.filled {
      background: linear-gradient(135deg, rgba($primary,.28), rgba($accent,.25));
      color: $text-primary-dark;
      border-color: rgba($primary-light,.6);
    }
  }
}

.filterControl.open .filterTrigger .chevron {
  transform: rotate(180deg);
}

.clearSingle {
  position: absolute;
  top: -6px;
  right: -6px;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background: linear-gradient(135deg, $primary, $accent);
  color: #fff;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 4px 10px -2px rgba($primary,.45);
  opacity: 0;
  transform: scale(.6);
  transition: .35s;
  .lucide { width: 12px; height: 12px; }
  .filterControl.open & { opacity: 1; transform: scale(1); }
}
.filterControl:hover .clearSingle { opacity: 1; transform: scale(1); }

.clearAll {
  padding: .55rem 1rem;
  font-size: .7rem;
  font-weight: 600;
  text-transform: uppercase;
  background: linear-gradient(90deg, $primary, $accent);
  color: #fff;
  border: none;
  border-radius: 999px;
  letter-spacing: .6px;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: transform .3s, box-shadow .3s;
  box-shadow: 0 4px 14px -4px rgba($primary,.4);
  &:hover { transform: translateY(-2px); box-shadow: 0 10px 26px -6px rgba($primary,.45); }
}

.dropdown {
  position: absolute;
  top: calc(100% + .55rem);
  left: 0;
  min-width: 220px;
  background: white;
  border: 1px solid rgba($text-secondary,.12);
  border-radius: 18px;
  padding: .5rem;
  display: flex;
  flex-direction: column;
  gap: 2px;
  z-index: 30;
  box-shadow: 0 20px 40px -10px rgba(0,0,0,.12),
              0 2px 8px -2px rgba(0,0,0,.08);
  backdrop-filter: blur(12px);

  [data-theme="dark"] & {
    background: rgba(30,30,30,.85);
    border-color: rgba(255,255,255,.08);
    box-shadow: 0 20px 44px -12px rgba(0,0,0,.55);
  }
}

.dropdownItem {
  width: 100%;
  background: transparent;
  border: none;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: .75rem;
  padding: .65rem .85rem;
  font-size: .8rem;
  letter-spacing: .3px;
  font-weight: 600;
  color: $text-secondary;
  border-radius: 12px;
  cursor: pointer;
  position: relative;
  transition: background .25s, color .25s;
  text-align: left;

  &:hover {
    background: rgba($primary,.08);
    color: $text-primary;
  }

  &.selected {
    background: linear-gradient(135deg, rgba($primary,.15), rgba($accent,.15));
    color: $text-primary;
  }

  [data-theme="dark"] & {
    color: $text-secondary-dark;
    &:hover {
      background: linear-gradient(135deg, rgba($primary,.2), rgba($accent,.2));
      color: $text-primary-dark;
    }
    &.selected {
      background: linear-gradient(135deg, rgba($primary,.3), rgba($accent,.28));
      color: #fff;
    }
  }
}

.tick {
  display: flex;
  align-items: center;
  justify-content: center;
  color: $primary;
  [data-theme="dark"] & { color: $primary-light; }
}
.optionText { flex: 1; }

.resultsBar {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap: .75rem;
  justify-content: space-between;
  padding: .35rem .25rem 0;

  @media (max-width: $breakpoint-sm) {
    flex-direction: column;
    align-items: center;
    // align-items: stretch;
  }
}
.resultsInfo {
  display: inline-flex;
  align-items: center;
  gap: .5rem;
  font-size: .8rem;
  font-weight: 600;
  padding: .55rem .95rem;
  background: linear-gradient(135deg, rgba($primary,.07), rgba($accent,.07));
  border-radius: 14px;
  color: $text-secondary;
  [data-theme="dark"] & {
    background: linear-gradient(135deg, rgba($primary,.18), rgba($accent,.14));
    color: $text-secondary-dark;
  }
  svg { color: $primary; }
}

.activeChips {
  display: flex;
  flex-wrap: wrap;
  gap: .55rem;
  min-height: 44px;
  align-items: center;
}

.activeChip {
  display: inline-flex;
  align-items: center;
  gap: .45rem;
  padding: .45rem .75rem .45rem .7rem;
  background: linear-gradient(90deg, rgba($primary,.15), rgba($accent,.15));
  border-radius: 12px;
  font-size: .7rem;
  font-weight: 600;
  letter-spacing: .4px;
  color: $primary;
  position: relative;
  box-shadow: 0 4px 14px -6px rgba($primary,.4);

  [data-theme="dark"] & {
    background: linear-gradient(90deg, rgba($primary,.3), rgba($accent,.3));
    color: $primary-light;
  }
}
.chipLabel { opacity: .7; }
.chipValue { background: transparent; }
.chipClose {
  background: rgba(0,0,0,.12);
  border: none;
  width: 18px; height: 18px;
  display: flex; align-items: center; justify-content: center;
  border-radius: 50%; cursor: pointer;
  color: #fff;
  font-size: .65rem;
  transition: background .25s;
  &:hover { background: rgba(0,0,0,.3); }

  [data-theme="dark"] & {
    background: rgba(255,255,255,.22);
    &:hover { background: rgba(255,255,255,.38); }
  }
}
.noActive {
  font-size: .72rem;
  font-weight: 600;
  letter-spacing: .5px;
  text-transform: uppercase;
  opacity: .5;
}

/* ============ Project Grid Cards (refined) ============ */

.projectsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));
  gap: 2rem;
  opacity: 0;
  transform: translateY(24px);
  transition: .7s ease;
  &.loaded { opacity: 1; transform: translateY(0); }

  @media (max-width: $breakpoint-lg) {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }
  @media (max-width: $breakpoint-sm) {
    grid-template-columns: 1fr;
    gap: 1.65rem;
  }
}

.projectCard {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: 22px;
  background: white;
  overflow: hidden;
  box-shadow: 0 10px 28px -8px rgba(0,0,0,.15), 0 4px 12px -4px rgba(0,0,0,.08);
  transition: box-shadow .45s cubic-bezier(.25,.8,.25,1), transform .5s ease ;
  isolation: isolate;

  &:before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(140deg, rgba($primary,.05), rgba($accent,.05));
    opacity: 0;
    transition: opacity .45s;
    z-index: 0;
  }

  &:hover {
    box-shadow: 0 18px 46px -14px rgba(0,0,0,.28), 0 8px 22px -10px rgba(0,0,0,.15);
    &:before { opacity: 1; }
    transform: translateY(-6px) !important;
  }

  [data-theme="dark"] & {
    background: #141414;
    box-shadow: 0 18px 40px -12px rgba(0,0,0,.6);
  }
}

.cardMedia {
  position: relative;
  height: 220px;
  background: linear-gradient(120deg, rgba($primary,.12), rgba($accent,.12));
  overflow: hidden;

  img {
    transition: transform 1.1s cubic-bezier(.25,.75,.25,1);
  }
  &:hover img { transform: scale(1.05); }
}

.mediaPlaceholder {
  position: absolute;
  inset: 0;
  display: flex; align-items: center; justify-content: center;
  color: $primary;
  background: linear-gradient(135deg, rgba($primary,.15), rgba($accent,.15));
  [data-theme="dark"] & {
    background: linear-gradient(135deg, rgba($primary,.25), rgba($accent,.25));
    color: $primary-light;
  }
}

.logoBadge {
  position: absolute;
  top: .9rem;
  right: .9rem;
  width: 60px; height: 60px;
  background: rgba(255,255,255);
  backdrop-filter: blur(10px);
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 6px 20px -8px rgba(0,0,0,.4);
  z-index: 2;
  img { object-fit: contain;  }

}

.statusBadge {
  position: absolute;
  left: 1rem;
  bottom: .9rem;
  display: inline-flex;
  align-items: center;
  gap: .45rem;
  padding: .45rem .75rem;
  font-size: .65rem;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: .75px;
  border-radius: 10px;
  backdrop-filter: blur(8px);
  color: #fff;
  box-shadow: 0 6px 24px -8px rgba(0,0,0,.6);

  &.completed { background: linear-gradient(120deg, #10b981, #059669); }
  &.ongoing { background: linear-gradient(120deg, #f59e0b, #d97706); }
  &.upcoming { background: linear-gradient(120deg, #6366f1, #4f46e5); }
}

.cardBody {
  position: relative;
  z-index: 1;
  padding: 1.65rem 1.5rem 1.4rem;
  display: flex;
  flex-direction: column;
  gap: 1.1rem;
  flex: 1;
}

.categoryLine {
  font-size: .62rem;
  font-weight: 700;
  letter-spacing: .85px;
  text-transform: uppercase;
  color: $primary;
  background: linear-gradient(120deg, rgba($primary,.15), rgba($accent,.15));
  padding: .45rem .7rem .4rem;
  width: fit-content;
  border-radius: 9px;
  [data-theme="dark"] & {
    color: $primary-light;
    background: linear-gradient(120deg, rgba($primary,.28), rgba($accent,.28));
  }
}

.cardTitle {
  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1.25;
  margin: 0;
  color: $text-primary;
  [data-theme="dark"] & { color: $text-primary-dark; }
}

.cardExcerpt {
  font-size: .88rem;
  line-height: 1.5;
  color: $text-secondary;
  margin: 0;
  flex-grow: 0;
  [data-theme="dark"] & { color: $text-secondary-dark; }
}

.stackRow {
  display: flex;
  flex-wrap: wrap;
  gap: .45rem;
}
.stackPill {
  font-size: .6rem;
  font-weight: 600;
  letter-spacing: .3px;
  padding: .4rem .65rem .35rem;
  background: rgba($text-secondary,.08);
  color: $text-secondary;
  border-radius: 999px;
  position: relative;
  overflow: hidden;
  transition: .35s;
  &:hover { background: rgba($primary,.18); color: $text-primary; }
  [data-theme="dark"] & {
    background: rgba($text-secondary-dark,.22);
    color: $text-secondary-dark;
    &:hover { background: linear-gradient(135deg, rgba($primary,.35), rgba($accent,.35)); color: #fff; }
  }
}
.stackMore {
  @extend .stackPill;
  background: linear-gradient(135deg, rgba($primary,.25), rgba($accent,.25));
  color: $primary;
  [data-theme="dark"] & { color: $primary-light; }
}

.cardFooter {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: 1rem;
  gap: 1rem;
}




/* Reveal Panel */
.revealPanel {
  padding: 1.2rem 1.3rem 1.5rem;
  border-top: 1px solid rgba($text-secondary,.12);
  background: linear-gradient(180deg, rgba($primary,.06), rgba($accent,.06));
  [data-theme="dark"] & {
    background: linear-gradient(180deg, rgba($primary,.22), rgba($accent,.18));
    border-color: rgba(255,255,255,.08);
  }
  border-radius: 0 0 22px 22px;
}

.revealGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(140px,1fr));
  gap: .85rem;
  margin-bottom: 1.1rem;
}

.revealStat {
  display: flex;
  gap: .6rem;
  align-items: center;
  padding: .55rem .65rem;
  background: rgba($text-secondary,.06);
  border-radius: 12px;
  position: relative;
  overflow: hidden;
  transition: .35s;
  &:hover { background: rgba($primary,.18); }
  [data-theme="dark"] & {
    background: rgba(255,255,255,.08);
    &:hover { background: linear-gradient(135deg, rgba($primary,.35), rgba($accent,.35)); }
  }
}
.revealIcon {
  width: 32px; height: 32px;
  display: flex; align-items: center; justify-content: center;
  background: linear-gradient(135deg, rgba($primary,.2), rgba($accent,.2));
  border-radius: 10px;
  color: $primary;
  [data-theme="dark"] & {
    background: linear-gradient(135deg, rgba($primary,.35), rgba($accent,.3));
    color: $primary-light;
  }
}
.revealMeta {
  display: flex; flex-direction: column;
  .revealValue {
    font-size: .75rem;
    font-weight: 700;
    color: $text-primary;
    [data-theme="dark"] & { color: $text-primary-dark; }
  }
  .revealLabel {
    font-size: .55rem;
    font-weight: 600;
    letter-spacing: .75px;
    text-transform: uppercase;
    color: $text-secondary;
    [data-theme="dark"] & { color: $text-secondary-dark; }
  }
}

.metaInfo {
  display: grid;
  grid-template-columns: repeat(auto-fill,minmax(120px,1fr));
  gap: .85rem;
}
.metaItem {
  display: flex;
  flex-direction: column;
  gap: .2rem;
  padding: .55rem .65rem;
  background: rgba($text-secondary,.05);
  border-radius: 10px;
  font-size: .65rem;
  letter-spacing: .4px;
  font-weight: 600;
  [data-theme="dark"] & { background: rgba(255,255,255,.07); }
}
.metaLabel {
  font-size: .55rem;
  text-transform: uppercase;
  letter-spacing: .8px;
  font-weight: 700;
  opacity: .6;
}

/* Empty State */
.emptyState {
  grid-column: 1 / -1;
  text-align: center;
  padding: 3.5rem 2rem 4rem;
  border: 2px dashed rgba($text-secondary,.18);
  background: linear-gradient(180deg, rgba($primary,.05), rgba($accent,.05));
  border-radius: 26px;
  position: relative;
  overflow: hidden;
  [data-theme="dark"] & {
    border-color: rgba(255,255,255,.15);
    background: linear-gradient(180deg, rgba($primary,.25), rgba($accent,.25));
  }

  h3 {
    font-size: 1.6rem;
    margin: 1rem 0 .65rem;
    color: $text-primary;
    [data-theme="dark"] & { color: $text-primary-dark; }
  }
  p {
    font-size: .95rem;
    color: $text-secondary;
    max-width: 480px;
    margin: 0 auto 1.5rem;
    line-height: 1.55;
    [data-theme="dark"] & { color: $text-secondary-dark; }
  }
}
.emptyIcon {
  width: 76px; height: 76px;
  margin: 0 auto;
  border-radius: 26px;
  background: linear-gradient(135deg, $primary, $accent);
  display: flex; align-items: center; justify-content: center;
  color: #fff;
  box-shadow: 0 14px 36px -12px rgba($primary,.55);
}
.resetBtn {
  padding: .85rem 1.55rem;
  font-size: .8rem;
  font-weight: 700;
  letter-spacing: .7px;
  text-transform: uppercase;
  background: linear-gradient(135deg, $primary, $accent);
  color: #fff;
  border: none;
  border-radius: 14px;
  cursor: pointer;
  box-shadow: 0 8px 24px -10px rgba($primary,.55);
  transition: transform .35s, box-shadow .35s;
  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 18px 40px -18px rgba($primary,.65);
  }
}



/* Button redesign (replacing .quickToggle & .detailsLink usage) */
.actionGhost {
  appearance: none;
  background: rgba($text-secondary, .08);
  color: $text-secondary;
  border: 1px solid rgba($text-secondary, .15);
  font-size: .68rem;
  letter-spacing: .75px;
  font-weight: 700;
  text-transform: uppercase;
  padding: .6rem 1rem .55rem;
  border-radius: 10px;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: .3s ease;
  backdrop-filter: blur(4px);

  &:hover {
    background: linear-gradient(135deg, rgba($primary,.18), rgba($accent,.18));
    color: $text-primary;
    border-color: rgba($primary,.5);
    transform: translateY(-2px);
  }
  &:active { transform: translateY(0); }

  [data-theme="dark"] & {
    background: rgba(255,255,255,.07);
    color: $text-secondary-dark;
    border-color: rgba(255,255,255,.15);
    &:hover {
      background: linear-gradient(135deg, rgba($primary,.32), rgba($accent,.32));
      color: #fff;
      border-color: rgba($primary-light,.55);
    }
  }
}

.actionPrimary {
  display: inline-flex;
  align-items: center;
  gap: .45rem;
  padding: .65rem 1.2rem .6rem;
  background: linear-gradient(135deg, $primary, $accent);
  color: #fff;
  font-size: .7rem;
  font-weight: 700;
  letter-spacing: .85px;
  text-transform: uppercase;
  border-radius: 10px;
  text-decoration: none;
  position: relative;
  overflow: hidden;
  transition: .4s cubic-bezier(.25,.8,.25,1);
  box-shadow: 0 6px 18px -6px rgba($primary,.5);

  &:before {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(120deg, rgba(#fff,.35), rgba(#fff,0) 60%);
    opacity: 0;
    mix-blend-mode: overlay;
    transition: opacity .45s;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 16px 34px -12px rgba($primary,.55);
    &:before { opacity: 1; }
  }
  &:active { transform: translateY(-1px); }

  [data-theme="dark"] & {
    box-shadow: 0 10px 30px -14px rgba($primary,.75);
  }

  svg { transition: transform .4s; }
  &:hover svg { transform: translateX(4px); }
}

/* Remove old quickToggle/detailsLink if still present */
.quickToggle, .detailsLink { display: none !important; }
